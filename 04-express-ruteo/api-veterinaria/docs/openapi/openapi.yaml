openapi: 3.0.0
info:
  title: API Veterinaria
  description: 'Documentación para API Veterinaria'
  contact:
    email: franciscohanna92@gmail.com
  version: 1.0.0
servers:
- url: localhost
paths:
  /mascotas:
    get:
      tags:
      - Mascotas
      summary: Obtener un listado de las mascotas existentes
      operationId: obtenerMascotas
      parameters: 
        - in: query
          name: tipo
          schema:
            type: string
            enum: ['PERRO', 'GATO']
          description: El tipo de mascota por el cual filtrar
          required: false
        - in: query
          name: esDeRaza
          schema:
            type: boolean
            example: false
          description: Para obtener solo mascota de raza
          required: false
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mascota'
        500:
          description: Hubo un error al obtener el listado de mascotas
          content: {}
    post:
      tags:
      - Mascotas
      summary: Agregar una nueva mascota
      operationId: agregarMascota
      requestBody:
        description: Objeto mascota a ser creado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mascota'
        required: true
      responses:
        201:
          description: La mascota fue creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mascota'
        400:
          description: Los datos de la mascota son incorrectos
          content: {}
        500:
          description: Ocurrió un error al crear la mascota
          content: {}
  /mascotas/{idMascota}:
    get:
      tags:
        - Mascotas
      summary: Obtener los datos de una mascota en especifico
      operationId: obtenerMascotaPorId
      parameters:
        - in: path
          name: idMascota
          description: El id de la mascota a buscar
          schema: 
            type: string
            format: uuid
            example: bd248beb-2b22-40a4-9b72-7da29b4e296d
          required: true
components:
  schemas:
    Mascota:
      required:
      - nombre
      - tipo
      type: object
      properties:
        _id:
          type: integer
        nombre:
          type: string
          example: Pepito
        tipo:
          type: string
          enum: [PERRO, GATO]
          example: PERRO
        esDeRaza:
          type: boolean
          example: doggie
        fechaNacimiento:
          type: string
          format: date
          example: doggie
        # vacunas:
        #   type: array
        #   items:
        #     $ref: '#/components/vacuna.yaml'
          
